name: Playwright Tests by Use Case
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      test_suite:
        description: 'Test suite to run'
        required: false
        type: choice
        options:
          - fichar-entrada
          - fichar-salida
        default: ''
  schedule:
    # Invierno (CET, UTC+1) — meses aproximados: nov, dic, ene, feb, mar
    # Fichar Entrada - 08:00 CET -> 07:00 UTC
    - cron: '0 7 * 11,12,1,2,3 1-5'
    # Fichar Salida - 17:30 CET -> 16:30 UTC (Lunes-Jueves)
    - cron: '30 16 * 11,12,1,2,3 1-4'
    # Fichar Salida - 14:00 CET -> 13:00 UTC (Viernes)
    - cron: '0 13 * 11,12,1,2,3 5'
    # Verano (CEST, UTC+2) — meses aproximados: abr-oct
    # Fichar Entrada - 08:00 CEST -> 06:00 UTC
    - cron: '0 6 * 4,5,6,7,8,9,10 1-5'
    # Fichar Salida - 17:30 CEST -> 15:30 UTC (Lunes-Jueves)
    - cron: '30 15 * 4,5,6,7,8,9,10 1-4'
    # Fichar Salida - 14:00 CEST -> 12:00 UTC (Viernes)
    - cron: '0 12 * 4,5,6,7,8,9,10 5'

env:
  PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1 # Se instalará en el paso de cache
  BASE_URL: ${{ secrets.BASE_URL }}

jobs:
  test-fichar-entrada:
    name: Test Fichar Entrada Use Cases
    timeout-minutes: 60
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'schedule' && (github.event.schedule == '0 7 * 11,12,1,2,3 1-5' || github.event.schedule == '0 6 * 4,5,6,7,8,9,10 1-5')) ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.test_suite == 'fichar-entrada')
    steps:
    - uses: actions/checkout@v4

    - name: Check Málaga holidays
      id: holiday-check
      run: |
        TODAY=$(TZ=Europe/Madrid date +%F)
        if [ -f .github/holidays/malaga.txt ]; then
          if grep -Fxq "$TODAY" .github/holidays/malaga.txt; then
            echo "is_holiday=true" >> $GITHUB_OUTPUT
          else
            echo "is_holiday=false" >> $GITHUB_OUTPUT
          fi
        else
          echo "is_holiday=false" >> $GITHUB_OUTPUT
        fi

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: lts/*
        cache: 'npm'

    - name: Cache Playwright browsers
      id: playwright-cache
      uses: actions/cache@v3
      with:
        path: ~/.cache/ms-playwright
        key: playwright-browsers-${{ runner.os }}

    - name: Install dependencies
      if: steps.holiday-check.outputs.is_holiday != 'true'
      run: npm ci

    - name: Install Playwright browsers if not cached
      if: steps.holiday-check.outputs.is_holiday != 'true' && steps.playwright-cache.outputs.cache-hit != 'true'
      run: npx playwright install --with-deps

    - name: Run Fichar Entrada tests
      if: steps.holiday-check.outputs.is_holiday != 'true'
      id: run-tests
      run: |
        echo "::group::Running Fichar Entrada tests"
        DAY=$(TZ=Europe/Madrid date +%u)  # 1=Mon ... 7=Sun
        echo "Día (Europe/Madrid): $DAY"
        case "$DAY" in
          2|4)
            echo "Ejecutando: fichar-entrada-presencial (martes/jueves)"
            npx playwright test tests/fichar-entrada-presencial.spec.ts --reporter=list
            ;;
          1|3|5)
            echo "Ejecutando: fichar-entrada-teletrabajo (lun/mié/vie)"
            npx playwright test tests/fichar-entrada-teletrabajo.spec.ts --reporter=list
            ;;
          *)
            echo "Día no laborable o fin de semana ($DAY) — omitiendo pruebas de entrada."
            ;;
        esac
        echo "::endgroup::"

    - name: Upload test results
      if: steps.holiday-check.outputs.is_holiday != 'true'
      uses: actions/upload-artifact@v4
      with:
        name: fichar-entrada-report-${{ github.run_id }}
        path: |
          playwright-report/
          test-results/
        retention-days: 30

  test-fichar-salida:
    name: Test Fichar Salida Use Case
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'schedule' && (github.event.schedule == '30 16 * 11,12,1,2,3 1-4' || github.event.schedule == '0 13 * 11,12,1,2,3 5' || github.event.schedule == '30 15 * 4,5,6,7,8,9,10 1-4' || github.event.schedule == '0 12 * 4,5,6,7,8,9,10 5')) ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.test_suite == 'fichar-salida')
    steps:
    - uses: actions/checkout@v4

    - name: Check Málaga holidays
      id: holiday-check
      run: |
        TODAY=$(TZ=Europe/Madrid date +%F)
        if [ -f .github/holidays/malaga.txt ]; then
          if grep -Fxq "$TODAY" .github/holidays/malaga.txt; then
            echo "is_holiday=true" >> $GITHUB_OUTPUT
          else
            echo "is_holiday=false" >> $GITHUB_OUTPUT
          fi
        else
          echo "is_holiday=false" >> $GITHUB_OUTPUT
        fi

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: lts/*
        cache: 'npm'

    - name: Cache Playwright browsers
      id: playwright-cache
      uses: actions/cache@v3
      with:
        path: ~/.cache/ms-playwright
        key: playwright-browsers-${{ runner.os }}

    - name: Install dependencies
      if: steps.holiday-check.outputs.is_holiday != 'true'
      run: npm ci

    - name: Install Playwright browsers if not cached
      if: steps.holiday-check.outputs.is_holiday != 'true' && steps.playwright-cache.outputs.cache-hit != 'true'
      run: npx playwright install --with-deps

    - name: Run Fichar Salida tests
      if: steps.holiday-check.outputs.is_holiday != 'true'
      id: run-tests
      run: |
        echo "::group::Running Fichar Salida tests"
        npx playwright test tests/fichar-salida.spec.ts --reporter=list
        echo "::endgroup::"

    - name: Upload test results
      if: steps.holiday-check.outputs.is_holiday != 'true'
      uses: actions/upload-artifact@v4
      with:
        name: fichar-salida-report-${{ github.run_id }}
        path: |
          playwright-report/
          test-results/
        retention-days: 30

  publish-report:
    name: Publish HTML Report
    needs: [test-fichar-entrada, test-fichar-salida]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-artifacts

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: all-artifacts

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  notify:
    name: Send Email Notification
    needs: [test-fichar-entrada, test-fichar-salida, publish-report]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Get current time
        id: time
        run: echo "time=$(date +'%Y-%m-%d %H:%M:%S %Z')" >> $GITHUB_OUTPUT

      - name: Send email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "Playwright Tests Results - ${{ steps.time.outputs.time }}"
          to: ${{ secrets.EMAIL_RECIPIENT }}
          from: GitHub Actions
          html_body: |
            <h2>Resultados de las pruebas de Playwright</h2>
            <p>Ejecutado el: ${{ steps.time.outputs.time }}</p>

            <h3>Resumen</h3>
            <ul>
              <li>Fichar Entrada: <strong>${{ needs.test-fichar-entrada.result }}</strong></li>
              <li>Fichar Salida: <strong>${{ needs.test-fichar-salida.result }}</strong></li>
            </ul>

            <h3>Enlaces</h3>
            <ul>
              <li><a href="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}">Ver ejecución en GitHub Actions</a></li>
              <li><a href="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}">Ver reporte HTML detallado</a></li>
            </ul>

            <p style="color: #666; font-size: 0.9em;">
              Trigger: ${{ github.event_name }}<br>
              Branch: ${{ github.ref_name }}<br>
              Commit: ${{ github.sha }}
            </p>